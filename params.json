{"name":"Robocup","tagline":"Robocup SoccerAgent","body":"### What Is SoccerAgent?\r\nSoccerAgent is an agent that can be used to play football in robocup soccer simulations. It is based off the standard AgentBase in the TinMan framework but has a number of improvements aimed at making it easier to get started playing soccer!\r\n\r\n### Installation - Windows Only\r\nInstall [Visual Studio 2012](http://www.microsoft.com/visualstudio/eng/downloads)\r\n\r\nInstall the [Visual Studio C++ 2008 Redistributable Package (x86)](http://www.microsoft.com/en-us/download/details.aspx?id=29)\r\n\r\nInstall [simspark](http://sourceforge.net/projects/simspark/files/simspark/0.2.2/simspark-0.2.2-win32.exe/download)\r\n\r\nInstall [rcssserver3d](http://sourceforge.net/projects/simspark/files/rcssserver3d/0.6.5/rcssserver3d-0.6.5-win32.exe/download)\r\n\r\nInstall [Ruby](http://rubyforge.org/frs/download.php/76798/rubyinstaller-1.9.3-p392.exe) (Check the option to add Ruby to PATH).\r\n\r\nRestart your machine\r\n\r\nDownload and open the [SoccerAgent Solution](https://github.com/TVOHM/Robocup/zipball/master)\r\n\r\n### Getting Started\r\nTo start programming your agent, you need to modify MySoccerAgent.cs\r\n\r\n```C#\r\n/// <summary>\r\n/// Called every time the agent 'thinks'\r\n/// </summary>\r\n/// <param name=\"perceptorState\">What the agent can percieve (i.e landmarks, ball position etc</param>\r\n/// <param name=\"agentState\">The current state of the agent (i.e. walking)</param>\r\npublic override void SoccerAgentThink\r\n    (PerceptorState perceptorState, AgentState agentState)\r\n{\r\n    // Choose an action based upon the agent state\r\n    switch (agentState)\r\n    {\r\n        case AgentState.IDLE:\r\n            // The agent is doing nothing.\r\n            // You may start a keyframe action - SetKeyFrame(\"kick\");\r\n            // Or tell the agent to walk - MoveTo(Landmark.FlagRightTop);\r\n            //mWalk.MoveTo(perceptorState, Body);\r\n            //SetKeyFrame(\"Fall_Forward\"); \r\n            break;\r\n        case AgentState.WALKING:\r\n            // The agent is walking\r\n            // You may update the walking behaviour - MoveTo(perceptorState.BallPosition);\r\n            // Stop the walk - MoveStop();\r\n            // Or interrupt the walk by starting a keyframe action - SetKeyFrame(\"kick\");\r\n            break;\r\n        case AgentState.KEYFRAME:\r\n            // The agent is performing a keyframe animation that was started by SetKeyFrame\r\n            // You may not take any actions\r\n            break;\r\n        case AgentState.AUTORIGHTING:\r\n            // The agent has fallen over and is in the process of getting up\r\n            // You may not take any actions\r\n            break;\r\n    }\r\n}\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}